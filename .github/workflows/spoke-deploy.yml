name: Deploy Spokes (CloudFormation Matrix)

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        account_id: ${{ fromJson(vars.TARGET_ACCOUNTS_JSON) }}
    steps:
      - uses: actions/checkout@v4

      - name: Lint CFN templates
        run: |
          pip install cfn-lint
          cfn-lint cloudformation/spoke-cfn.yaml

      - name: Configure AWS credentials (Spoke)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ matrix.account_id }}:role/${{ vars.SPOKE_DEPLOY_ROLE || 'GitHubOIDCDeploy' }}
          aws-region: us-east-1

      - name: Render params
        shell: bash
        env:
          EXTERNAL_ID: ${{ secrets.CROSS_ACCOUNT_EXTERNAL_ID }}
        run: |
          jq \
            --arg prefix "${{ vars.NAME_PREFIX || 'ec2-patch' }}" \
            --arg env "${{ vars.ENVIRONMENT || 'dev' }}" \
            --arg hub "${{ vars.HUB_ACCOUNT_ID }}" \
            --arg ext "${EXTERNAL_ID}" \
            '.NamePrefix=$prefix | .Environment=$env | .HubAccountId=$hub | .ExternalId=$ext' \
            cloudformation/params/dev-spoke.json > params.effective.json

      - name: Deploy Spoke stack (CFN)
        run: |
          PARAMS=$(jq -r 'to_entries | map("\(.key)=\(.value|tostring)") | join(" ")' params.effective.json)
          aws cloudformation deploy \
            --template-file cloudformation/spoke-cfn.yaml \
            --stack-name ec2-patch-spoke \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides $PARAMS
